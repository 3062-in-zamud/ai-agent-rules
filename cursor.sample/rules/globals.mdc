---
description: Global rules applied to entire repository
globs:
  - "**/*"
ruleType: Always
alwaysApply: true
---
## 0. ルール読了確認（必須）
- このルールを読み終えたら、以下のように発言すること：
```
**`##### グローバルルール確認完了！`**
```
- この確認が行われない限り、実装計画書や進捗ログの生成は行ってはならない。

## 自律進行・高精度AI運用指針

### 1. 自律進行の原則（必須）
- AI は **自律的にタスクを完遂** するが、**実装開始前に必ず「実装計画書」を起案しユーザー承認を得る**。
  - 例外はユーザーが `#quick-fix` または `#no-plan` を明示した場合のみ。
- ルールの意図を理解し **合理的・柔軟** に運用する。
- 形式的報告より **成果物品質** を優先。

### 2. ステップ粒度ガイドライン（必須）
| 見積工数 | ステップ数目安 | ステップ例 | 承認タイミング |
|----------|---------------|-----------|---------------|
| ≤ 1 日   | **1 ステップ** | バグ修正 / 小機能追加 | 計画書承認のみで完了後報告 |
| 1 – 3 日 | **2 – 3 マイルストーン** | 「モデル作成 → API 実装 → テスト/ドキュメント」 | 各マイルストーン完了時に自動ログのみ。承認不要 |
| 3 – 7 日 | **3 – 5 マイルストーン** | 大機能、UI + API + Infra | マイルストーンごとに自動ログ + 中間報告 (要約) |
| > 7 日  | **機能単位に分割** (1 – 2 日相当) | Epic/複数機能 | 各分割単位を通常フローで処理 |

- **サブステップ確認は禁止**。報告はマイルストーンまたは最終成果物時のみ。

## 3. 品質担保と自律的問題対応（必須）
1. マイルストーン完了時に **セルフテスト / lint / CI** を自動実行。
2. 不整合時は **原因特定 → 修正 → 再検証 → 簡潔報告** を自律遂行。

### 4. 成果物提出原則
- レビューに **必須情報のみ** を提出。
- 提出タイミング: **マイルストーン完了時 (自動ログ + 要約)** と **最終成果物時 (詳細報告)**。

### 5. ルール改定
- AI は改善提案を随時行えるが、計画書承認・ログ記録は省略不可。

---

# 必須ルール一覧
1. **ルール読了報告** を必ず最初に発言する。
2. **実装計画書 + 承認** 後に実装開始（`#quick-fix` など除く）。
3. ステップ数は「ステップ粒度ガイドライン」に従う。
4. マイルストーン完了ごとに進捗ログを記録（canmoreでの実ファイル生成を含む）。
5. **命名規則・ディレクトリ構成・セキュリティ要件** を厳守。
6. **重大変更** はユーザー承認必須。
7. **UI/UX 変更** は事前承認必須。
8. **技術スタックのバージョン固定変更禁止** (承認必須)。
9. 不明点や重大判断は **作業開始前または発生時に確認**。

# 推奨ルール一覧
- **@todo.md** : ブレークダウン・覚書用途に活用。

---

# 運用フロー（簡易）
```mermaid
flowchart TD
  Start([Signal受領]) --> RulesCheck[ルール読了報告]
  RulesCheck --> Plan[実装計画書起案]
  Plan --> Review{ユーザー承認?}
  Review -->|No| Revise[修正]
  Review -->|Yes| Dev[自律実装 & マイルストーン処理]
  Dev --> Log[進捗ログ生成 → canmore.create_textdoc]
  Log --> Test[自動品質検証]
  Test -->|問題| Fix[自律修正]
  Test -->|OK| Done[最終報告]
```

---

(End of globals.mdc)
